file "$(DXP)/dxpApp/Db/dxpSystem.template" {
{P=dxpXMAP:, IO="@asyn(DXP1,0)"}
}

file "$(DXP)/dxpApp/Db/dxpMED.template" {
{P=dxpXMAP:, MCAALL=mcaAll, DET0="@asyn(DXP1,0,1)", DETALL="@asyn(DXP1,12,1)"} 
}

file "$(DXP)/dxpApp/Db/dxpXMAP.template" {
{P=dxpXMAP:, IO="@asyn(DXP1,0)"}
}

# DXP parameters
file "$(DXP)/dxpApp/Db/dxpHighLevel.template"
{
pattern
{       P,       R,           IO}
{dxpXMAP:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxpXMAP:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxpXMAP:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxpXMAP:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxpXMAP:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxpXMAP:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxpXMAP:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxpXMAP:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxpXMAP:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxpXMAP:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxpXMAP:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxpXMAP:,   dxp12:,  "@asyn(DXP1,11,1)"}
}

# Low-level parameters
file "$(DXP)/dxpApp/Db/dxpLowLevel.template"
{
pattern
{       P,       R,        IO}
{dxpXMAP:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxpXMAP:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxpXMAP:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxpXMAP:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxpXMAP:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxpXMAP:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxpXMAP:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxpXMAP:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxpXMAP:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxpXMAP:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxpXMAP:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxpXMAP:,   dxp12:,  "@asyn(DXP1,11,1)"}
}

# SCA parameters
file "$(DXP)/dxpApp/Db/dxpSCA_16.template"
{
pattern
{       P,       R,          IO}
{dxpXMAP:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxpXMAP:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxpXMAP:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxpXMAP:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxpXMAP:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxpXMAP:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxpXMAP:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxpXMAP:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxpXMAP:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxpXMAP:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxpXMAP:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxpXMAP:,   dxp12:,  "@asyn(DXP1,11,1)"}
}


file "$(MCA)/mcaApp/Db/simple_mca.db"
{
pattern
{       P,      M,       DTYP,               INP,  PREC,    CHANS}
{dxpXMAP:,   mca1,  "asynMCA",   "@asyn(DXP1,0)",     2,     2048}
{dxpXMAP:,   mca2,  "asynMCA",   "@asyn(DXP1,1)",     2,     2048}
{dxpXMAP:,   mca3,  "asynMCA",   "@asyn(DXP1,2)",     2,     2048}
{dxpXMAP:,   mca4,  "asynMCA",   "@asyn(DXP1,3)",     2,     2048}
{dxpXMAP:,   mca5,  "asynMCA",   "@asyn(DXP1,4)",     2,     2048}
{dxpXMAP:,   mca6,  "asynMCA",   "@asyn(DXP1,5)",     2,     2048}
{dxpXMAP:,   mca7,  "asynMCA",   "@asyn(DXP1,6)",     2,     2048}
{dxpXMAP:,   mca8,  "asynMCA",   "@asyn(DXP1,7)",     2,     2048}
{dxpXMAP:,   mca9,  "asynMCA",   "@asyn(DXP1,8)",     2,     2048}
{dxpXMAP:,  mca10,  "asynMCA",   "@asyn(DXP1,9)",     2,     2048}
{dxpXMAP:,  mca11,  "asynMCA",  "@asyn(DXP1,10)",     2,     2048}
{dxpXMAP:,  mca12,  "asynMCA",  "@asyn(DXP1,11)",     2,     2048}
{dxpXMAP:, mcaAll,  "asynMCA",  "@asyn(DXP1,12)",     2,     2048}
}

