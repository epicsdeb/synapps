#  This database works with SNL program smartControl.st to allow SMART to
#  control EPICS motors
#
#                   Mark Rivers
#                   September 17, 2000
#
# Modifications:
#   8-Feb-2002 MLR  Changed the _SIGN PVs from mbbo to bi.  mbbo was being
#                   used to hold "1" or "-1" in the RVAL field, but 
#                   RVAL type is ULONG, so it can't hold -1.
#
# Macro parameters:
#   $(P)        - PV name prefix
#   $(R)        - PV base record name
#   $(PORT)     - asyn port for the serial port
#   $(FSHUT)    - Name of PV to control fast shutter
#   $(SSHUT)    - Name of PV to control slow shutter
#   $(TRIG)     - Name of PV to control detector trigger
#

#
# PVs defining which motors exist
#
grecord(bo,"$(P)$(R)TTH_EXISTS") {
    field(DESC,"TTH exists?")
    field(VAL,"1")
    field(ZNAM,"No")
    field(ONAM,"Yes")
}
grecord(bo,"$(P)$(R)OMEGA_EXISTS") {
    field(DESC,"OMEGA exists?")
    field(VAL,"1")
    field(ZNAM,"No")
    field(ONAM,"Yes")
}
grecord(bo,"$(P)$(R)PHI_EXISTS") {
    field(DESC,"PHI exists?")
    field(VAL,"1")
    field(ZNAM,"No")
    field(ONAM,"Yes")
}
grecord(bo,"$(P)$(R)KAPPA_EXISTS") {
    field(DESC,"KAPPA exists?")
    field(VAL,"1")
    field(ZNAM,"No")
    field(ONAM,"Yes")
}

#
# PVs with SMART motor values
#
# SMART motor positions
grecord(ao,"$(P)$(R)TTH_POS") {
    field(DESC,"SMART 2-theta position")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_POS") {
    field(DESC,"SMART Omega position")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_POS") {
    field(DESC,"SMART Phi position")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_POS") {
    field(DESC,"SMART Kappa position")
    field(PREC, "3")
}

# SMART motor velocities
grecord(ao,"$(P)$(R)TTH_VEL") {
    field(DESC,"SMART 2-theta velocity")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_VEL") {
    field(DESC,"SMART Omega velocity")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_VEL") {
    field(DESC,"SMART Phi velocity")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_VEL") {
    field(DESC,"SMART Kappa velocity")
    field(PREC, "3")
}

# SMART motor low limits
grecord(ao,"$(P)$(R)TTH_LOW_LIM") {
    field(DESC,"SMART 2-theta low limit")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_LOW_LIM") {
    field(DESC,"SMART Omega low limit")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_LOW_LIM") {
    field(DESC,"SMART Phi low limit")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_LOW_LIM") {
    field(DESC,"SMART Kappa low limit")
    field(PREC, "3")
}

# SMART motor high limits
grecord(ao,"$(P)$(R)TTH_HIGH_LIM") {
    field(DESC,"SMART 2-theta high limit")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_HIGH_LIM") {
    field(DESC,"SMART Omega high limit")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_HIGH_LIM") {
    field(DESC,"SMART Phi high limit")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_HIGH_LIM") {
    field(DESC,"SMART Kappa high limit")
    field(PREC, "3")
}

# SMART motor low cut points
grecord(ao,"$(P)$(R)TTH_LOW_CUT") {
    field(DESC,"SMART 2-theta low cut point")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_LOW_CUT") {
    field(DESC,"SMART Omega low cut point")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_LOW_CUT") {
    field(DESC,"SMART Phi low cut point")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_LOW_CUT") {
    field(DESC,"SMART Kappa low cut point")
    field(PREC, "3")
}

# SMART motor high cut points
grecord(ao,"$(P)$(R)TTH_HIGH_CUT") {
    field(DESC,"SMART 2-theta high cut point")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_HIGH_CUT") {
    field(DESC,"SMART Omega high cut point")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_HIGH_CUT") {
    field(DESC,"SMART Phi high cut point")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_HIGH_CUT") {
    field(DESC,"SMART Kappa high cut point")
    field(PREC, "3")
}

# Axis offsets
grecord(ao,"$(P)$(R)TTH_OFFSET") {
    field(DESC,"SMART 2-theta offset")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)OMEGA_OFFSET") {
    field(DESC,"SMART Omega offset")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)PHI_OFFSET") {
    field(DESC,"SMART Phi offset")
    field(PREC, "3")
}
grecord(ao,"$(P)$(R)KAPPA_OFFSET") {
    field(DESC,"SMART Kappa offset")
    field(PREC, "3")
}

# Axis signs
grecord(bi,"$(P)$(R)TTH_SIGN") {
    field(DESC,"SMART 2-theta sign")
    field(VAL, "0")
    field(ZNAM, "Positive")
    field(ONAM, "Negative")
}
grecord(bi,"$(P)$(R)OMEGA_SIGN") {
    field(DESC,"SMART Omega sign")
    field(VAL, "0")
    field(ZNAM, "Positive")
    field(ONAM, "Negative")
}
grecord(bi,"$(P)$(R)PHI_SIGN") {
    field(DESC,"SMART Phi sign")
    field(VAL, "0")
    field(ZNAM, "Positive")
    field(ONAM, "Negative")
}
grecord(bi,"$(P)$(R)KAPPA_SIGN") {
    field(DESC,"SMART Kappa sign")
    field(VAL, "0")
    field(ZNAM, "Positive")
    field(ONAM, "Negative")
}

# Record to control debugging output
grecord(ao,"$(P)$(R)debugLevel") {
    field(DESC,"Debugging level")
    field(VAL,"5")
    field(PREC, "0")
}

#
# PVs for controlling shutters and detector trigger
#
grecord(bo,"$(P)$(R)FSHUT") {
    field(DESC,"Control fast shutter")
    field(OUT,"$(P)$(FSHUT) PP MS")
    field(ZNAM,"Open")
    field(ONAM,"Closed")
}
grecord(bo,"$(P)$(R)SSHUT") {
    field(DESC,"Control slow shutter")
    field(OUT,"$(P)$(SSHUT) PP MS")
    field(ZNAM,"Open")
    field(ONAM,"Closed")
}
grecord(bo,"$(P)$(R)TRIG") {
    field(DESC,"Control detector trigger")
    field(OUT,"$(P)$(TRIG) PP MS")
    field(ZNAM,"On")
    field(ONAM,"Off")
}

# PV to control what asyn port to use.
grecord(stringout, "$(P)$(R)asynPort") {
        field(VAL,"$(PORT)")
}
