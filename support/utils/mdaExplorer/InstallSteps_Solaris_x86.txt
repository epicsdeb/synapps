mkdir /home/oxygen/MOONEY/python25_x86
setenv TOP /home/oxygen/MOONEY/python25_x86
setenv TAR /home/oxygen/MOONEY/python25/TAR
cd ${TOP}

tar xf ${TAR}/Python-2.5.2.tar
tar xf ${TAR}/PythonDocs_html-2.5.2.tar	(optional)
tar xf ${TAR}/ipython-0.8.2.tar			(optional)
tar xf ${TAR}/matplotlib-0.91.2.tar 
tar xf ${TAR}/numpy-1.0.4.tar
tar xf ${TAR}/wxPython-src-2.8.7.1.tar
tar xf ${TAR}/wxmpl-1.2.9.tar

# On solaris 10 sparc, make sure /usr/sfw/bin comes before /opt/gnu/bin in the
# command path, because /opt/gnu/bin doesn't work for Solaris 10.
# For example:
#setenv PATH /usr/dt/bin:/usr/bin:/opt/SUNWspro/bin:/usr/openwin/bin:/usr/bin/X11:/usr/sfw/bin:/opt/gnu/bin:/opt/local/bin:/usr/ccs/bin:/opt/SUNWsmtv/bin:/usr/lib/nis:/usr/sbin:/usr/ucb:/usr/local/bin:/opt/local/sbin:.:

# Try this for solaris-x86
setenv PATH /home/oxygen/MOONEY/bin:/usr/bin:/usr/local/bin:/opt/local/bin:/opt/gnu/bin:/opt/SUNWspro/bin:/usr/dt/bin:/usr/openwin/bin:/usr/ccs/bin:/usr/sfw/bin:/usr/bin/X11:/opt/SUNWsmtv/bin:/usr/sbin:/usr/ucb:/home/oxygen/MOONEY/bin/solaris-x86:/usr/local/oag/bin_patch/solaris-x86:/usr/local/oag/apps/bin/solaris-x86:/home/oxygen/MOONEY/bin/solaris:/usr/local/epics/extensions/bin/solaris-x86:/usr/bin:/opt/local/sbin:/usr/sfw/bin:/usr/lib/nis:/usr/ucb:/home/oxygen/MOONEY/pythonlib:.
cd ${TOP}/Python-2.5.2
./configure --prefix ${TOP}
gnumake
gnumake test
gnumake install

# When the install finishes, ${TOP} will have acquired bin, lib,
# include, and share directories, and the copy of python in the bin directory
# is the one that must be used to setup/install other modules as python site
# packages.  TTherefore, put the bin directory in front of other PATH directories.
# For example:
setenv PATH ${TOP}/bin:$PATH

# Make sure old stuff in PYTHONPATH will not interfere with setup/install
unsetenv PYTHONPATH

# After the top-level wxPython-src-2.8.7.1 has built and been installed,
# then ${TOP}/lib must be added to the LD_LIBRARY_PATH for
# the actual wxPython setup, and to 'import wx' from python.
# For example:
setenv LD_LIBRARY_PATH ${TOP}/lib:$LD_LIBRARY_PATH

# build and install numpy
cd ${TOP}/numpy-1.0.4
${TOP}/bin/python setup.py install

# wxWidgets
cd ${TOP}/wxPython-src-2.8.7.1
# edit wxPython/config.py to uncomment lines starting at 
# "if os.uname()[0] == 'SunOS'"
#./configure --prefix=${TOP} --with-gtk --with-gnomeprint --with-opengl --enable-optimize --enable-debug_flag --enable-debug_gdb --enable-geometry --enable-graphics_ctx --enable-unicode --enable-rpath=${TOP}/lib --with-libjpeg=builtin --with-libpng=builtin --with-libtiff=builtin --with-zlib=builtin

# Looks like openGL might not be supported in solaris-x86
./configure --prefix=${TOP} --with-gtk --with-gnomeprint --enable-optimize --enable-debug_flag --enable-debug_gdb --enable-geometry --enable-graphics_ctx --enable-unicode --enable-rpath=${TOP}/lib --with-libjpeg=builtin --with-libpng=builtin --with-libtiff=builtin --with-zlib=builtin

# The above makes a working executable, but pyinstaller doesn't find libwx*
# Try not specifying --enable-rpath=${TOP}/lib, and specifying --disable-shared
#./configure --prefix=${TOP} --with-gtk --with-gnomeprint --with-opengl --enable-optimize --enable-debug_flag --enable-debug_gdb --enable-geometry --enable-graphics_ctx --enable-unicode --with-libjpeg=builtin --with-libpng=builtin --with-libtiff=builtin --with-zlib=builtin --disable-shared

gnumake
gnumake install
gnumake -C contrib/src/gizmos
gnumake -C contrib/src/gizmos install
gnumake -C contrib/src/stc
gnumake -C contrib/src/stc install

# We'll need to use wxWidgets (should not need this if specified --disable-shared to
# configure).
setenv LD_LIBRARY_PATH ${TOP}/lib:$LD_LIBRARY_PATH

# wxPython
cd ${TOP}/wxPython-src-2.8.7.1/wxPython

# If openGL is available:
#${TOP}/bin/python setup.py build_ext --inplace --debug WX_CONFIG=${TOP}/wxPython-src-2.8.7.1/wx-config
#${TOP}/bin/python setup.py install WX_CONFIG=${TOP}/wxPython-src-2.8.7.1/wx-config

# If openGL is not available:
${TOP}/bin/python setup.py build_ext BUILD_GLCANVAS=0 --inplace --debug WX_CONFIG=${TOP}/wxPython-src-2.8.7.1/wx-config
${TOP}/bin/python setup.py install BUILD_GLCANVAS=0 WX_CONFIG=${TOP}/wxPython-src-2.8.7.1/wx-config

# matplotlib
cd ${TOP}/matplotlib-0.91.2
cp setup.cfg.template setup.cfg

# edit setup.cfg, adding the following line (without the # character):
# backend = WXAgg
${TOP}/bin/python setup.py build
${TOP}/bin/python setup.py install

# wxmpl
cd ${TOP}/wxmpl-1.2.9
${TOP}/bin/python setup.py build
${TOP}/bin/python setup.py install --prefix ${TOP}
>
##########################################################################
# All the rest is to use pyinstaller to make a frozen copy of mdaExplorer
# pyinstaller
cd ${TOP}
tar xf ${TAR}/pyinstaller_1.3.tar
cd ${TOP}/pyinstaller-1.3/source/linux
#${TOP}/bin/python Make.py -e
${TOP}/bin/python Make.py -n
gnumake

cd ${TOP}/pyinstaller-1.3
${TOP}/bin/python Configure.py

# mdaExplorer spec file
setenv PYTHONPATH .:/home/oxygen/MOONEY/pythonlib
setenv LD_LIBRARY_PATH ${TOP}/lib:/usr/lib:/opt/gnu/lib:/usr/local/matlab/extern/lib/sol2:/usr/local/matlab/bin/sol2:/opt/X11R6/lib:/opt/local/lib

${TOP}/bin/python Makespec.py /home/oxygen/MOONEY/pythonlib/mdaExplorer.py

#edit mdaExplorer/mdaExplorer.spec to include matplotlib's data directory in the collection
${TOP}/bin/python Build.py mdaExplorer/mdaExplorer.spec

cd mdaExplorer
tar cf distmdaExplorer.tar distmdaExplorer.tar

# The user untars this file someplace which we'll call ${DIST}
# Now ${DIST}/distmdaExplorer includes the directory matplotlibdata.  Matplotlib can
# use the environment variable MATPLOTLIBDATA to tell it where to look for its data dir.
# User must also set the environment variable LD_LIBRARY_PATH to include the distmdaExplorer
# directory

cd ${DIST}
tar xf distmdaExplorer.tar
setenv LD_LIBRARY_PATH ${DIST}/distmdaExplorer
setenv MATPLOTLIBDATA ${DIST}/distmdaExplorer/matplotlibdata
${DIST}/distmdaExplorer/mdaExplorer
