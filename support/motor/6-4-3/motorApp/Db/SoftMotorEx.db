#! Generated by VisualDCT v2.4
#! DBDSTART
#! DBDEND


record(calc, "$(user):height") {
  field(CALC, "1000")
}

record(calcout, "$(user):convertDriverValue") {
  field(DESC, "Convert rotary to linear")
  field(CALC, "TAN(A / 57.296) * B")
  field(INPB, "$(user):height.VAL  PP MS")
  field(OUT, "$(user):linear.DVAL PP MS")
  field(PREC, "3")
}

record(calcout, "$(user):convertReadbackValue") {
  field(DESC, "Convert linear to rotary")
  field(CALC, "ATAN(A / B) * 57.296")
  field(INPA, "$(user):linear.DRBV  CP MS")
  field(INPB, "$(user):height.VAL  PP MS")
  field(PREC, "3")
}

record(motor, "$(user):linear") {
  field(DTYP, "OMS VME58")
  field(VELO, "25.0")
  field(VBAS, "1.0")
  field(OUT, "#C0 S0 @")
  field(MRES, "0.001")
  field(PREC, "3")
  field(EGU, "mm.")
  field(DHLM, "1000")
  field(DLLM, "-1000")
  field(RTRY, "0")
  field(TWV, "1")
  field(DMOV, "")
}

record(motor, "$(user):rotary") {
  field(DTYP, "Soft Channel")
  field(OUT, "$(user):convertDriverValue.A  PP MS")
  field(RDBL, "$(user):convertReadbackValue.VAL  NPP MS")
  field(MRES, "0.001")
  field(RRES, "1.0")
  field(URIP, "Yes")
  field(PREC, "3")
  field(EGU, "deg.")
  field(DHLM, "45")
  field(DLLM, "-45")
  field(RTRY, "0")
  field(TWV, "5")
  field(STOO, "$(user):linear.STOP  PP MS")
  field(DINP, "$(user):linear.DMOV")
  field(NTM, "NO")
}

#! Further lines contain data used by VisualDCT
#! View(454,346,0.9)
#! Record("$(user):height",560,713,0,0,"$(user):height")
#! Field("$(user):height.VAL",0,1,"$(user):height.VAL")
#! Record("$(user):convertDriverValue",1160,436,0,0,"$(user):convertDriverValue")
#! Field("$(user):convertDriverValue.INPB",0,0,"$(user):convertDriverValue.INPB")
#! Link("$(user):convertDriverValue.INPB","$(user):height.VAL")
#! Field("$(user):convertDriverValue.OUT",0,1,"$(user):convertDriverValue.OUT")
#! Link("$(user):convertDriverValue.OUT","$(user):linear.DVAL")
#! Field("$(user):convertDriverValue.A",0,0,"$(user):convertDriverValue.A")
#! Record("$(user):convertReadbackValue",1140,1016,0,0,"$(user):convertReadbackValue")
#! Field("$(user):convertReadbackValue.INPA",0,1,"$(user):convertReadbackValue.INPA")
#! Link("$(user):convertReadbackValue.INPA","$(user):linear.DRBV")
#! Field("$(user):convertReadbackValue.INPB",0,0,"$(user):convertReadbackValue.INPB")
#! Link("$(user):convertReadbackValue.INPB","$(user):height.VAL")
#! Field("$(user):convertReadbackValue.VAL",0,0,"$(user):convertReadbackValue.VAL")
#! Record("$(user):linear",1500,696,0,0,"$(user):linear")
#! Field("$(user):linear.DRBV",0,0,"$(user):linear.DRBV")
#! Field("$(user):linear.STOP",0,0,"$(user):linear.STOP")
#! Field("$(user):linear.DVAL",0,0,"$(user):linear.DVAL")
#! Field("$(user):linear.DMOV",0,0,"$(user):linear.DMOV")
#! Record("$(user):rotary",820,634,0,0,"$(user):rotary")
#! Field("$(user):rotary.OUT",0,1,"$(user):rotary.OUT")
#! Link("$(user):rotary.OUT","$(user):convertDriverValue.A")
#! Field("$(user):rotary.RDBL",0,1,"$(user):rotary.RDBL")
#! Link("$(user):rotary.RDBL","$(user):convertReadbackValue.VAL")
#! Field("$(user):rotary.STOO",0,1,"$(user):rotary.STOO")
#! Link("$(user):rotary.STOO","$(user):linear.STOP")
#! Field("$(user):rotary.DINP",0,1,"$(user):rotary.DINP")
#! Link("$(user):rotary.DINP","$(user):linear.DMOV")
