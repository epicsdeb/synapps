#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

#Architecture
build: build-arch build-indep

EPICS_HOST_ARCH:=$(shell /usr/epics/base/startup/EpicsHostArch)

RTEMS_TARGETS=RTEMS-mvme3100
#DEBUG_TAGETS=$(EPICS_HOST_ARCH)-debug
TARGETS+=$(DEBUG_TAGETS) $(RTEMS_TARGETS)

MFLAGS += USE_RPATH=NO "CROSS_COMPILER_TARGET_ARCHS=$(TARGETS)"


build-arch: build-arch-stamp
build-arch-stamp: $(all-all)

	# Add here commands to compile the arch part of the package.
	$(MAKE) -f support/new.make -C support build-autosave
	$(MAKE) -f support/new.make -C support INSTALL_LOCATION=$$PWD/inst build-autosave
	touch $@

build-indep: build-indep-stamp
build-indep-stamp:

	# Add here commands to compile the indep part of the package.
	#$(MAKE) doc
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp
	$(MAKE) -f support/new.make -C support clean

	dh_clean 

install: install-indep install-arch
install-indep:
	dh_testdir
	dh_testroot
	dh_clean -k -i 
	dh_installdirs -i

	install -d debian/epics-synapps-doc/usr/share/doc/epics-synapps/
	install -m 644 -t ddebian/epics-synapps-doc/usr/share/doc/epics-synapps/ README LICENSE

	dh_install -i

install-arch: install-arch-pre install-arch-host $(install-arch-targets) install-arch-post

install-arch-pre:
	dh_testdir
	dh_testroot
	dh_clean -k -s 
	dh_installdirs -s

install-arch-host:
	install -d debian/epics-synapps-dev/usr/bin
	install -d debian/epics-synapps-dev/usr/lib

	install -d debian/epics-synapps-dev/usr/epics/base/bin
	install -d debian/epics-synapps-dev/usr/epics/base/bin/$(EPICS_HOST_ARCH)
	install -d debian/epics-synapps-dev/usr/epics/base/lib
	install -d debian/epics-synapps-dev/usr/epics/base/lib/$(EPICS_HOST_ARCH)
	install -d debian/epics-synapps-dev/usr/epics/base/include
	install -d debian/epics-synapps-dev/usr/epics/base/db
	install -d debian/epics-synapps-dev/usr/epics/base/dbd

	# Executables
	install -m 755 -t debian/epics-synapps-dev/usr/epics/base/bin/$(EPICS_HOST_ARCH) \
inst/bin/$(EPICS_HOST_ARCH)/snc
	# Static libraries
	install -m 644 -t debian/epics-synapps-dev/usr/epics/base/lib/$(EPICS_HOST_ARCH) \
inst/lib/$(EPICS_HOST_ARCH)/*.a
	# Shared libraries (/usr/lib)
	install -m 644 -t debian/epics-synapps-dev/usr/lib \
inst/lib/$(EPICS_HOST_ARCH)/*.so.*
	# symlinks for compileing
	# link /usr/epics/base/lib/host-arch/*.so to /usr/lib/*.so.*
	for ff in inst/lib/$(EPICS_HOST_ARCH)/*.so; do \
ln -s ../../../../lib/$(notdir $(ff)).* \
debian/epics-synapps-dev/usr/epics/base/lib/$(EPICS_HOST_ARCH)/$(notdir $(ff)); \
done
	# database
	install -m 644 -t debian/epics-synapps-dev/usr/epics/base/db \
inst/db/*
	# database definitions
	install -m 644 -t debian/epics-synapps-dev/usr/epics/base/dbd \
inst/dbd/*

# $(1) is target name (ie RTEMS-mvme3100)
define rule-install-target

install-arch-$(1):
	if [ -d inst/bin/$(1) ]; then \
	cp -r inst/bin/$(1) debian/epics-synapps-dev/usr/epics/base/bin/;
	fi
	if [ -d inst/lib/$(1) ]; then \
	cp -r inst/lib/$(1) debian/epics-synapps-dev/usr/epics/base/lib/;
	fi

install-arch-targets += install-arch-$(1)

endef

$(foreach targ,$(TARGETS),$(eval $(call rule-install-target,$(targ))))

install-arch-post:
	dh_install -s

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate	
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip -Xrtems
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb
# Build architecture independant packages using the common target.
binary-indep: build-indep install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build-arch install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch
