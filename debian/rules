#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

#Architecture
build: build-arch build-indep

EPICS_HOST_ARCH:=$(shell /usr/epics/base/startup/EpicsHostArch)

RTEMS_TARGETS=RTEMS-mvme3100
#DEBUG_TAGETS=$(EPICS_HOST_ARCH)-debug
TARGETS+=$(DEBUG_TAGETS) $(RTEMS_TARGETS)

MFLAGS += USE_RPATH=NO "CROSS_COMPILER_TARGET_ARCHS=$(TARGETS)"

MFLAGS += EPICS_BASE=/usr/epics/base
MFLAGS += IPAC=$(CURDIR)/$(ipac_builddir)
MFLAGS += SSCAN=$(CURDIR)/$(sscan_builddir)
MFLAGS += SNCSEQ=$(CURDIR)/$(seq_builddir)
MFLAGS += CALC=$(CURDIR)/$(calc_builddir)

MODS += seq
seq_VER = 2-0-12
seq_INSTALLS = bin lib dbd include extra

MODS += ipac
ipac_VER = 2-10
ipac_INSTALLS = lib dbd include

MODS += sscan
sscan_VER = 2-6-4
sscan_INSTALLS = lib dbd include

MODS += autosave
autosave_VER = 4-5
autosave_INSTALLS = bin dbd lib

MODS += asyn
asyn_VER = 4-10
asyn_MFLAGS = "DIRS=configure makeSupport asyn"
asyn_INSTALLS = bin include lib db dbd templates
asyn_RTEMS-mvme3100_INSTALLS = lib

MODS += calc
calc_VER = 2-7
calc_INSTALLS = lib dbd include

MODS += motor
motor_VER = 6-4-3
motor_MFLAGS = ASYN=$(CURDIR)/$(asyn_builddir)
motor_INSTALLS = bin include lib dbd

MODS += stream
stream_VER = 2-4
stream_MFLAGS = ASYN=$(CURDIR)/$(asyn_builddir)
stream_INSTALLS = bin include lib dbd

# Extra install rules

install-seq-extra:
	install -d $(seq_instdev)/usr/epics/base/configure
	install -m 644 $(seq_builddir)/configure/RULES_BUILD $(seq_instdev)/usr/epics/base/configure/RULES.sncseq

# Targets to pass through to module Makefile
# $(1) is module name (ie seq)
# $(2) is target (ie all, clean, ...)
define target-mod

$(2)-$(1):
	EPICS_HOST_ARCH=$$(EPICS_HOST_ARCH) \
	$(MAKE) -C support/$(1)/$$($(1)_VER) $$(MFLAGS) $$($(1)_MFLAGS) $(2)

all-$(2) += $(2)-$(1)
endef

# Rules for installing a target (ie RTEMS-mvme3100)
#
# $(1) is the module name
# $(2) is the target name (mixed case) (RTEMS-mvme3100)
define install-mod-targ

$(1)_$(2)_LC = $$(shell echo -n $(2) | tr '[:upper:]' '[:lower:]')

$(1)_$(2)_instdir = debian/epics-$$($(1)_NAME)-$$($(1)_$(2)_LC)

$(1)_$(2)_INSTALLS ?= $$(filter bin lib,$$($(1)_INSTALLS))

install-$(1)-$(2): $$($(1)_$(2)_INSTALLS:%=install-$(1)-$(2)-%)

install-$(1)-$(2)-bin:
	install -d $$($(1)_$(2)_instdir)/usr/epics/base/bin
	cp -r $$($(1)_builddir)/bin/$(2) $$($(1)_$(2)_instdir)/usr/epics/base/bin/

install-$(1)-$(2)-lib:
	install -d $$($(1)_$(2)_instdir)/usr/epics/base/bin
	cp -r $$($(1)_builddir)/lib/$(2) $$($(1)_$(2)_instdir)/usr/epics/base/lib/

all-install += install-$(1)-$(2)
endef

info:
	echo "seq_RTEMS-mvme3100_LC=$(seq_RTEMS-mvme3100_LC)"
	echo "seq_RTEMS-mvme3100_instdir=$(seq_RTEMS-mvme3100_instdir)"

# Install a module into debian/epics-$(modname)-libs and debian/epics-$(modname)-dev
#
# $(1) is module name (ie seq)
define install-mod

$(1)_NAME ?= $(1)
$(1)_INSTALLS ?= bin lib db dbd include

$(1)_builddir = support/$(1)/$$($(1)_VER)
$(1)_instdev = debian/epics-$$($(1)_NAME)-dev
$(1)_instlib = debian/epics-$$($(1)_NAME)-libs

install-$(1): $$($(1)_INSTALLS:%=install-$(1)-%)

install-$(1)-bin:
	install -d $$($(1)_instdev)/usr/epics/base/bin
	cp -r $$($(1)_builddir)/bin/$$(EPICS_HOST_ARCH) $$($(1)_instdev)/usr/epics/base/bin/

install-$(1)-lib:
	install -d $$($(1)_instdev)/usr/epics/base/lib/$$(EPICS_HOST_ARCH)

	cp -r $$($(1)_builddir)/lib/$$(EPICS_HOST_ARCH)/*.a $$($(1)_instdev)/usr/epics/base/lib/$$(EPICS_HOST_ARCH)/

	install -d $$($(1)_instlib)/usr/lib
	cp -r $$($(1)_builddir)/lib/$$(EPICS_HOST_ARCH)/*.so* $$($(1)_instlib)/usr/lib

	for ff in $$($(1)_instlib)/usr/lib/*.so*; do ln -s ../../../../lib/`basename $$$$ff` $$($(1)_instdev)/usr/epics/base/lib/$$(EPICS_HOST_ARCH)/; done


install-$(1)-db:
	install -d $$($(1)_instdev)/usr/epics/base
	cp -r $$($(1)_builddir)/db $$($(1)_instdev)/usr/epics/base/

install-$(1)-dbd:
	install -d $$($(1)_instdev)/usr/epics/base
	cp -r $$($(1)_builddir)/dbd $$($(1)_instdev)/usr/epics/base/

install-$(1)-include:
	install -d $$($(1)_instdev)/usr/epics/base
	cp -r $$($(1)_builddir)/include $$($(1)_instdev)/usr/epics/base/

install-$(1)-templates:
	install -d $$($(1)_instdev)/usr/epics/base
	cp -r $$($(1)_builddir)/templates $$($(1)_instdev)/usr/epics/base/

all-install += install-$(1)
endef

$(eval $(foreach m,$(MODS),$(call target-mod,$(m),all)))
$(eval $(foreach m,$(MODS),$(call target-mod,$(m),realclean)))
$(eval $(foreach m,$(MODS),$(call install-mod,$(m))))

$(eval $(foreach m,$(MODS),$(foreach t,$(TARGETS),$(call install-mod-targ,$(m),$(t)))))
#all-seq:
#	$(MAKE) -f $(CURDIR)/debian/rules -C support/seq/$(seq_VER) $(MFLAGS) $(seq_MFLAGS) all

build-arch: build-arch-stamp
build-arch-stamp: $(all-all)

	# Add here commands to compile the arch part of the package.
	#$(MAKE)
	touch $@

build-indep: build-indep-stamp
build-indep-stamp:

	# Add here commands to compile the indep part of the package.
	#$(MAKE) doc
	touch $@

clean: $(all-realclean)
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp

	dh_clean 

install: install-indep install-arch
install-indep:
	dh_testdir
	dh_testroot
	dh_clean -k -i 
	dh_installdirs -i

	# Add here commands to install the indep part of the package into
	# debian/<package>-doc.
	#INSTALLDOC#

	dh_install -i

install-arch: install-arch-pre install-arch-body install-arch-post

install-arch-pre:
	dh_testdir
	dh_testroot
	dh_clean -k -s 
	dh_installdirs -s

install-arch-body: $(all-install)

install-arch-post:
	dh_install -s

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate	
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip -Xrtems
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb
# Build architecture independant packages using the common target.
binary-indep: build-indep install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build-arch install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch
